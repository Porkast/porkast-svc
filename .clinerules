# Porkast Service CLI Rules

## Runtime & Package Management

- Use Bun.js for all commands (install, run, test)
- Prefer `bun run` over direct node/npm commands
- Use `bun install` for dependency management

## Development Commands

- Use `bun run src/index.ts` for local development
- Use `NODE_ENV=production bun run src/index.ts` for production testing
- Use `bun test` for running tests

## Database Operations  

- Use `bunx prisma` for database migrations and operations
- Use `bun run src/jobs/*` for job-related operations

## Code Quality

- Follow TypeScript best practices
- Use the custom logger (`logger.debug/info/warn/error`) instead of console.*
- Maintain proper error handling with custom error types
- Keep database operations in `/src/db/`
- Keep API routes in `/src/api/`
- Keep Telegram bot handlers in `/src/telegram/`
- Keep utility functions in `/src/utils/`

## Environment Variables

- Ensure DATABASE_URL is set for database connections
- Use NODE_ENV to control logging and behavior (development/production)
- Set PORKAST_WEB_BASE_URL for proper URL generation
- Set TELEGRAM_BOT_TOKEN for bot functionality
- Set SPOTIFY_CLIENT_ID and SPOTIFY_CLIENT_SECRET for Spotify API access

## Testing & Verification

- Use timeout with development server commands: `timeout 5 bun run src/index.ts`
- Verify routes table displays correctly on server start
- Test both development and production modes
